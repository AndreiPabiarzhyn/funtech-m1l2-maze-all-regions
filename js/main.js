import { initUI } from './ui.js';
import { newGame, beginPlay, retrySameLevel, closeVictoryAndBackToMenu } from './game.js';
import { attachInput } from './input.js';
import { State, CONFIG } from './state.js';
import { redraw } from './ui.js';

// === –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
window.addEventListener('load', () => {
  initUI();
  attachInput();

  // üîπ –°—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –æ–∫–Ω–∞
  newGame();

  // –ö–Ω–æ–ø–∫–∏
  document.getElementById('levelStartButton').addEventListener('click', () => beginPlay());
  document.getElementById('gameOverOk').addEventListener('click', () => retrySameLevel());
  document.getElementById('closeVictory').addEventListener('click', () => closeVictoryAndBackToMenu());
});

// === üîπ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ iframe –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ ===

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ canvas —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
function resizeCanvas() {
  const container = document.querySelector('.game-container');
  if (!container) return;

  const width = container.clientWidth;
  const height = container.clientHeight - 60;

  const mazeW = CONFIG.cols * CONFIG.cellSize;
  const mazeH = CONFIG.rows * CONFIG.cellSize;
  const scale = Math.min(width / mazeW, height / mazeH);

  State.canvas.width = mazeW * scale;
  State.canvas.height = mazeH * scale;
  State.ctx.setTransform(scale, 0, 0, scale, 0, 0);

  // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑–≤–∞—Ç—å redraw —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏
  if (State.maze) {
    redraw();
  }
}

// —Å–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–∫–Ω–∞
window.addEventListener('resize', resizeCanvas);

// –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
setTimeout(resizeCanvas, 100);
