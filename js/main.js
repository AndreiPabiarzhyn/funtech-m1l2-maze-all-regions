import { initUI, showStartOverlay } from './ui.js';
import { newGame, beginPlay, retrySameLevel, closeVictoryAndBackToMenu } from './game.js';
import { attachInput } from './input.js';

window.addEventListener('load', ()=>{
  initUI();
  attachInput();
  showStartOverlay();

  // –ö–Ω–æ–ø–∫–∏
  document.getElementById('startButton').addEventListener('click', ()=> newGame());
  document.getElementById('levelStartButton').addEventListener('click', ()=> beginPlay());
  document.getElementById('gameOverOk').addEventListener('click', ()=> retrySameLevel());
  document.getElementById('closeVictory').addEventListener('click', ()=> closeVictoryAndBackToMenu());
});

// === üîπ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ iframe –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ ===
import { State, CONFIG } from './state.js';
import { redraw } from './ui.js';

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ canvas —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
function resizeCanvas() {
  const container = document.querySelector('.game-container');
  if (!container) return;

  // –≤—ã—á–∏—Å–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é —à–∏—Ä–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É
  const width = container.clientWidth;
  const height = container.clientHeight - 60; // –Ω–µ–±–æ–ª—å—à–æ–µ –º–µ—Å—Ç–æ –¥–ª—è HUD

  // –∏—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ª–∞–±–∏—Ä–∏–Ω—Ç–∞
  const mazeW = CONFIG.cols * CONFIG.cellSize;
  const mazeH = CONFIG.rows * CONFIG.cellSize;

  // –º–∞—Å—à—Ç–∞–± –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –æ—Å–∏ (—á—Ç–æ–±—ã –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–ª–æ—Å—å)
  const scale = Math.min(width / mazeW, height / mazeH);

  // –æ–±–Ω–æ–≤–ª—è–µ–º canvas
  State.canvas.width = mazeW * scale;
  State.canvas.height = mazeH * scale;

  // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –∑–∞–¥–∞–µ–º –º–∞—Å—à—Ç–∞–±
  State.ctx.setTransform(scale, 0, 0, scale, 0, 0);

  redraw();
}

// —Å–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–∫–Ω–∞ –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
window.addEventListener('resize', resizeCanvas);

// –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∑–≤–∞—Ç—å
setTimeout(resizeCanvas, 100);
